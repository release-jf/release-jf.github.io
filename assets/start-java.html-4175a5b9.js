import{_ as e,X as t,Y as p,a0 as o,Z as s,$ as n,a1 as l,a2 as i,D as c}from"./framework-dfec7332.js";const r={},u=s("p",null,[s("strong",null,"前提"),n("：本例中是基于 java->jar与lib 依赖分离，且处于同级目录；如果不是，可以自己修改配置文件（"),s("code",null,"nohup java -jar xxx.jar"),n("）")],-1),k={href:"https://blog.csdn.net/qq_42476834/article/details/112507565",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><p><strong>语法</strong>：<code>sh start.sh [options] [jar-version] [ADD_PORT]</code></p><p><em>options</em>：</p><ul><li>start：启动服务</li><li>stop：停止服务</li><li>restart：重启服务</li><li>status：查看服务状态</li><li>debug：开启远程debug控制</li></ul><p><em>jar-version</em>：Java项目jar包名称，无需输入<code>.jar</code>后缀</p><p><em>ADD_PORT</em>：options 为 debug 调试模式时用，默认监听端口为 <em>51135</em>，可自定义</p><p>启动程序：<code>sh start.sh start test-1.x.x</code></p><p>debug启动：<code>sh start.sh debug test-1.x.x</code> | <code>sh start.sh debug test-1.x.x 51235</code></p><p>重启程序：<code>sh start.sh restart test-1.x.x</code></p><p>查看运行状态：<code>sh start.sh status test-1.x.x</code></p><p>关闭程序：<code>sh start.sh stop test-1.x.x</code></p><p>获取使用教程：<code>sh start.sh -h</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@demo demos<span class="token punctuation">]</span><span class="token comment"># ls</span>
start.sh lib test-1.0.jar

<span class="token punctuation">[</span>root@demo demos<span class="token punctuation">]</span><span class="token comment"># sh start.sh start test-1.0</span>
Service test-1.0.jar is starting！pid<span class="token operator">=</span><span class="token number">17827</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Start success<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.

<span class="token punctuation">[</span>root@demo demos<span class="token punctuation">]</span><span class="token comment"># sh start.sh status test-1.0</span>
Service test-1.0.jar is running. It&#39;s <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token number">17827</span>

<span class="token punctuation">[</span>root@demo demos<span class="token punctuation">]</span><span class="token comment"># sh start.sh restart test-1.0</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Restarting<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.
Service test-1.0.jar is starting！pid<span class="token operator">=</span><span class="token number">19134</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Start success<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Restart success<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.

<span class="token punctuation">[</span>root@demo demos<span class="token punctuation">]</span><span class="token comment"># sh start.sh stop test-1.0</span>
Service stop success！pid:19134 <span class="token function">which</span> has been killed forcibly<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>start.sh脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>

<span class="token comment"># 定义变量</span>
<span class="token assign-left variable">JAR_NAME</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$2</span>.jar&quot;</span>
<span class="token comment"># debug监听端口</span>
<span class="token assign-left variable">ADD_PORT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$3</span>&quot;</span>
<span class="token comment"># help获取使用方法</span>
<span class="token function-name function">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;please use command: sh start.sh [start|stop|restart|status|debug] [jar-version] [ADD_PORT]&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;For example: sh start.sh start 1.0.1&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;debug For example: sh start.sh debug demo1.0 | sh start.sh debug demo1.0 6156&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token comment"># 该方法会重新启动程序</span>
<span class="token function-name function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># 查看pid,先杀掉，再运行jar</span>
  <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token comment"># 设置默认监听端口</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$ADD_PORT</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token assign-left variable">ADD_PORT</span><span class="token operator">=</span><span class="token string">&quot;51135&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;......default Listen on port for DEBUG:<span class="token variable">\${ADD_PORT}</span>&quot;</span>
  <span class="token keyword">fi</span>
  <span class="token comment"># -z 表示为空</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$pid</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$pid</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;......kill -9 <span class="token variable">\${pid}</span>.....&quot;</span>
    <span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-agentlib:jdwp</span><span class="token operator">=</span>transport<span class="token operator">=</span>dt_socket,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>n,address<span class="token operator">=</span><span class="token variable">$ADD_PORT</span> <span class="token parameter variable">-Dloader.path</span><span class="token operator">=</span>lib/ <span class="token parameter variable">-jar</span> <span class="token variable">$JAR_NAME</span> <span class="token operator">&gt;</span>debugOut.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
    <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;debug Service <span class="token variable">\${JAR_NAME}</span> is starting！newPid:<span class="token variable">\${pid}</span>, Listen on port:<span class="token variable">\${ADD_PORT}</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;......debug restart: success......&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">else</span> 
    <span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-agentlib:jdwp</span><span class="token operator">=</span>transport<span class="token operator">=</span>dt_socket,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>n,address<span class="token operator">=</span><span class="token variable">$ADD_PORT</span> <span class="token parameter variable">-Dloader.path</span><span class="token operator">=</span>lib/ <span class="token parameter variable">-jar</span> <span class="token variable">$JAR_NAME</span> <span class="token operator">&gt;</span>debugOut.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
    <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;debug Service <span class="token variable">\${JAR_NAME}</span> is starting！pid:<span class="token variable">\${pid}</span>, address:<span class="token variable">\${ADD_PORT}</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;......debug Start： success......&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>
<span class="token comment"># 启动方法</span>
<span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># 重新获取一下pid</span>
  <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token comment"># -z 表示为空</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$pid</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-Dloader.path</span><span class="token operator">=</span>lib/ <span class="token parameter variable">-jar</span> <span class="token variable">$JAR_NAME</span> <span class="token operator">&gt;</span>out.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
    <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service <span class="token variable">\${JAR_NAME}</span> is starting！pid:<span class="token variable">\${pid}</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;.........Start success........&quot;</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service <span class="token variable">\${JAR_NAME}</span> is already running,it&#39;s pid:<span class="token variable">\${pid}</span>. If necessary.&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;please use command:[sh start.sh stop [version] | sh start.sh restart [version]].&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># 停止方法</span>
<span class="token function-name function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># 重新获取一下pid</span>
  <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token comment"># -z 表示为空</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$pid</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service <span class="token variable">\${JAR_NAME}</span> is not running!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">else</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$pid</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service stop success！pid:<span class="token variable">\${pid}</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># 输出运行状态方法</span>
<span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># 重新获取一下pid</span>
  <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token comment"># -z 表示为空</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$pid</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service <span class="token variable">\${JAR_NAME}</span> is not running!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Service <span class="token variable">\${JAR_NAME}</span> is running. It&#39;s pid=<span class="token variable">\${pid}</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># 重启方法</span>
<span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;.................Restarting.................&quot;</span>
  <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> $JAR_NAME <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
  <span class="token comment"># -z 表示为空</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$pid</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$pid</span>
  <span class="token keyword">fi</span>
  start
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 根据输入参数执行对应方法</span>
<span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>
<span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span>
  start
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token string">&quot;stop&quot;</span><span class="token punctuation">)</span>
  stop
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
  status
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token string">&quot;restart&quot;</span><span class="token punctuation">)</span>
  restart
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token string">&quot;-h&quot;</span><span class="token punctuation">)</span>
  <span class="token builtin class-name">help</span>
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span>
  debug
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function v(b,m){const a=c("ExternalLinkIcon");return t(),p("div",null,[o(" more "),u,s("p",null,[s("a",k,[n("maven打包配置jar与lib依赖分离"),l(a)])]),d])}const h=e(r,[["render",v],["__file","start-java.html.vue"]]);export{h as default};
